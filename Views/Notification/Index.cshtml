@model List<EMMS.Models.Entities.Notification>

@{
	ViewData["Title"] = "Notifications";
	ViewData["Notification"] = "active";
}

<div class="card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center bg-light">
        <span class="mb-0">Notifications</span>
        <span class="badge bg-secondary">@Model.Count()</span>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <ul class="list-group list-group-flush" id="notificationList">
                @foreach (var item in Model)
                {
                    <li class="list-group-item d-flex align-items-start justify-content-between">
                        <div class="d-flex align-items-start">
                            <div class="me-3">
                                @switch (item.Type)
                                {
                                    case "work":
                                        <i class="fas fa-tools text-primary fa-lg"></i>
                                        break;
                                    case "job":
                                        <i class="fas fa-briefcase text-success fa-lg"></i>
                                        break;
                                    case "asset":
                                        <i class="fas fa-box text-info fa-lg"></i>
                                        break;
                                    case "move":
                                        <i class="fa-solid fa-arrows-turn-to-dots text-warning fa-lg"></i>
                                        break;
                                    default:
                                        <i class="fas fa-bell text-secondary fa-lg"></i>
                                        break;
                                }
                            </div>
                            <div>
                                <div class="fw-bold">@item.Facility?.FacilityName</div>
                                <div class="text-muted">@item.Message</div>
                                <small class="text-secondary">@item.DateCreated?.ToString("dd MMM yyyy, HH:mm")</small>
                            </div>
                        </div>
                        <div>
                            @{
                                var action = item.Type switch
                                {
                                    "work" => Url.Action("Index", "JobManagement"),
                                    "job" => Url.Action("Index", "JobManagement"),
                                    "asset" => Url.Action("Index", "AssetManagement"),
                                    "move" => Url.Action("recieveAsset", "AssetMovement"),
                                    _ => ""
                                };
                            }

                            @if (!string.IsNullOrEmpty(action))
                            {
                                <a href="@action" title="View" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-eye"></i>
                                </a>
                            }
                            else
                            {
                                <span class="text-muted"><i class="fas fa-eye-slash"></i></span>
                            }
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="text-center text-muted py-5" id="emptyNotifications">
                <i class="fas fa-bell-slash fa-2x mb-3"></i>
                <p class="mb-0">No notifications yet.</p>
            </div>
        }
    </div>
</div>
