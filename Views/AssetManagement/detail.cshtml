@using static EMMS.Models.Enumerators
@using EMMS.Utility
@model EMMS.ViewModels.AssetDetailViewModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

    ViewData["Title"] = Model.Asset.AssetTagNumber;
    ViewData["asset"] = "active";
    var currentLocation = Model.MovementHistory?.Where(m => m.DateRejected == null).FirstOrDefault();
}
<script>
    const assetDetail = @Html.Raw(Json.Serialize(Model.Asset));
    const assetMovement = @Html.Raw(Json.Serialize(currentLocation));
</script>


<!-- Asset Detail Section -->
<div class="card mb-4 shadow-sm">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <span><i class="fa-solid fa-box-open me-2"></i>Asset Detail</span>
        <button class="btn btn-sm btn-light text-dark" title="Print" onclick="printAssetDetail()">
            <i class="fa-solid fa-print me-1"></i>Print
        </button>
    </div>

    <div class="card-body">
        <div class="row gy-4">

            <!-- Column 1 -->
            <div class="col-md-12 col-lg-4">
                <dl class="row small">
                    <dt class="col-6 border p-1 m-0">Asset Tag</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.AssetTagNumber)</dd>

                    <dt class="col-6 border p-1 m-0">Category</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.Category!.Name)</dd>

                    <dt class="col-6 border p-1 m-0">Item Name</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.SubCategory!.Name)</dd>

                    <dt class="col-6 border p-1 m-0 d-none">Item Name</dt>
                    <dd class="col-6 border p-1 m-0 d-none">@Html.DisplayFor(model => model.Asset.ItemName)</dd>

                    <dt class="col-6 border p-1 m-0">Created By</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.User.FirstName)</dd>

                    <dt class="col-6 border p-1 m-0">Procurement Date</dt>
                    <dd class="col-6 border p-1 m-0">@(Model.Asset.ProcurementDate?.ToString("dd/MM/yyyy"))</dd>

                    <dt class="col-6 border p-1 m-0">Procurement Status</dt>
                    <dd class="col-6 border p-1 m-0">
                        @{
                            var procStatus = (ProcurementStatus)Model.Asset.StatusId;
                            var statusClass = procStatus switch
                            {
                                ProcurementStatus.New => "status-new",
                                ProcurementStatus.Used => "status-info",
                                ProcurementStatus.Refurbished => "status-warning",
                                ProcurementStatus.Decommissioned => "status-danger",
                                _ => ""
                            };
                        }
                        <div class="status-btn @statusClass">@procStatus</div>
                    </dd>
                </dl>
            </div>

            <!-- Column 2 -->
            <div class="col-md-12 col-lg-4">
                <dl class="row small">
                    <dt class="col-6 border p-1 m-0">Department</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.Department!.Name)</dd>

                    <dt class="col-6 border p-1 m-0">Manufacturer</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.Manufacturer!.Name)</dd>

                    <dt class="col-6 border p-1 m-0">Serial Number</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.SerialNumber)</dd>

                    <dt class="col-6 border p-1 m-0">Model</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.Model)</dd>

                    <dt class="col-6 border p-1 m-0">Lifespan</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.LifespanQuantity) Years</dd>

                    <dt class="col-6 border p-1 m-0">Cost</dt>
                    <dd class="col-6 border p-1 m-0">E@(Html.DisplayFor(model => model.Asset.Cost))</dd>

                    <dt class="col-6 border p-1 m-0">Serviceable</dt>
                    <dd class="col-6 border p-1 m-0">
                        @(Model.Asset.IsServiceable
                            ? $"Every {Model.Asset.ServiceInterval} Month(s)"
                            : "No")
                    </dd>
                </dl>
            </div>

            <!-- Column 3 -->
            <div class="col-md-12 col-lg-4">
                <dl class="row small">
                    <dt class="col-6 border p-1 m-0">Placement</dt>
                    <dd class="col-6 border p-1 m-0">
                        @(Model.Asset.IsPlacement
                            ? $"{Model.Asset.PlacementStartDate:dd/MM/yyyy} to {Model.Asset.PlacementEndDate:dd/MM/yyyy}"
                            : "No")
                    </dd>

                    <dt class="col-6 border p-1 m-0">Donated</dt>
                    <dd class="col-6 border p-1 m-0">@(Model.Asset.IsDonated ? "Yes" : "No")</dd>

                    <dt class="col-6 border p-1 m-0">Vendor</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.Vendor!.Name)</dd>

                    <dt class="col-6 border p-1 m-0">Service Provider</dt>
                    <dd class="col-6 border p-1 m-0">@Html.DisplayFor(model => model.Asset.ServiceProvider!.Name)</dd>

                    <dt class="col-6 border p-1 m-0">Current Location</dt>
                    <dd class="col-6 border p-1 m-0">
                        @(currentLocation?.Facility?.FacilityName
                            ?? currentLocation?.ServicePoint?.Name
                            ?? "-")
                    </dd>

                    <dt class="col-6 border p-1 m-0">Functional Status</dt>
                    <dd class="col-6 border p-1 m-0">
                        @{
                            if (currentLocation?.Reason == MovementReason.Decommission)
                            {
                                <div class="status-btn status-danger">Decommissioned</div>
                            }
                            else
                            {
                                var funcStatus = currentLocation?.FunctionalStatus;
                                var fsClass = funcStatus switch
                                {
                                    FunctionalStatus.Functional => "status-new",
                                    FunctionalStatus.NonFunctional => "status-danger",
                                    FunctionalStatus.UnderMaintenance => "status-warning",
                                    _ => ""
                                };
                                <div class="status-btn @fsClass">@funcStatus</div>
                            }
                        }
                    </dd>

                    @if (Model.Asset.IsServiceable)
                    {
                        <dt class="col-6 border p-1 m-0">Next Service Date</dt>
                        <dd class="col-6 border p-1 m-0">
                            @DateOnly.FromDateTime((DateTime)Model.Asset.NextServiceDate!)
                        </dd>
                    }
                </dl>
            </div>

        </div>
    </div>
</div>


<!-- Service History Section -->
<div class="card mb-4 shadow-sm">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <span><i class="fas fa-history me-2"></i>Service History</span>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Date</th>
                        <th>Type of Service</th>
                        <th>Status</th>
                        <th>Details</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var job in Model.ServiceHistory)
                    {
                        <tr>
                            <td>@job.DateCreated?.ToString("yyyy-MM-dd")</td>
                            <td>@job.FaultReport?.Name</td>
                            <td>@job.Status?.Name</td>
                            <td>@job.Remarks</td>
                            <td>
                                <a asp-controller="JobManagement"
                                asp-action="@(job.IsExternalProvider ? "externalJobCard" : "jobCard")"
                                asp-route-id="@job.JobId"
                                class="btn btn-sm btn-outline-info" title="View Job Card">
                                    <i class="fa fa-eye"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Movement/Assignment History Section -->
<div class="card mb-4 shadow-sm">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <span><i class="fas fa-route me-2"></i>Movement / Assignment History</span>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Date</th>
                        <th>Facility</th>
                        <th>Service Point</th>
                        <th>Reason</th>
                        <th>Functional Status</th>
                        <th>Received By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var move in Model.MovementHistory)
                    {
                        <tr>
                            <td>@move.MovementDate.ToString("yyyy-MM-dd")</td>
                            <td>
                                @if (move.DateRejected == null)
                                {
                                    @move.Facility.FacilityName
                                }
                                else
                                {
                                    <span class="text-danger fw-bold">Rejected @move.Facility.FacilityName</span>
                                }
                            </td>
                            <td>@(move.ServicePoint?.Name ?? "Unknown")</td>
                            <td>@move.Reason</td>
                            <td>
                                @{
                                    var statusLabel = move.FunctionalStatus switch
                                    {
                                        FunctionalStatus.Functional => "status-new",
                                        FunctionalStatus.NonFunctional => "status-danger",
                                        FunctionalStatus.UnderMaintenance => "status-warning",
                                        _ => ""
                                    };
                                }
                                <div class="status-btn @statusLabel">@move.FunctionalStatus</div>
                            </td>
                            <td>
                                @if (move.RecievedUser != null)
                                {
                                    @(move.RecievedUser.FirstName)
                                }
                                else if (move.RejectedUser != null)
                                {

                                    @(move.RejectedUser.FirstName)
                                }
                                else
                                {

                                    <span>Unkown User</span>
                                }
                            </td>  
                        </tr>
                    }
                </tbody>
            </table> 
        </div>
    </div>
</div>

